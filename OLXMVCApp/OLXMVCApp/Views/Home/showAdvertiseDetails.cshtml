@model IEnumerable<OLX.Models.User.UserBuyModel>

@{ ViewBag.Title = "shoeAdvertiseDetails"; }
@{ Layout = null; }

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body, h1, p, ul, li {
        margin: 0;
        padding: 0;
    }

    /* General Styles */
    .container {
        width: 100%;
        /* max-width: 1200px;
    margin: 0 auto; */
        padding: 20px;
        box-shadow: 20px;
    }

    .advertisement-list {
        display: flex;
        flex-wrap: wrap;
    }

    .slider {
        width: 100%;
        max-width: 100%;
        height: auto;
        box-shadow: 0px 0px 10px 3px grey;
        position: relative;
        overflow: hidden;
    }

        .slider figure img {
            max-width: 100%;
            max-height: auto;
            z-index: 2;
            position: relative;
            margin-left: 5.3%;
        }

        .slider figure {
            position: relative;
            width: 400%;
            margin: 0;
            left: 0;
            transition: 1s ease-in-out;
            background-color: black;
            justify-content: center;
        }

        .slider .btn-next, .btn-prev {
            position: absolute;
            top: 45%;
            cursor: pointer;
            color: white;
            background: #3949ab;
            padding: 20px;
            font-size: 50px;
            border: none;
        }

        .slider .btn-prev {
            left: 0px;
        }

        .slider .btn-next {
            right: 0px;
        }

        .slider .c {
            position: absolute;
            top: 8px;
            right: 16px;
            font-size: 18px;
        }

    ul li {
        display: inline;
        background-color: #FFCE32;
        border-radius: 5px;
        padding: 5px;
    }

        ul li span {
            margin: 5px;
        }

    .abcd {
        width: 77%;
        margin: 2px;
        padding: 2px;
    }

    .ccc {
        font-size: x-large;
        text-align: center;
        height: 50px;
        display: block;
        margin: 10px;
        padding: 10px;
    }

    .buttondiv {
        width: 20%;
    }

    .but {
        width: 100%;
        height: 50%;
        margin: 2px;
        padding: 2px;
    }

    .aaa {
        margin: 10px;
        font-size: xx-large;
        color: red;
    }
</style>


<body>
    @foreach (var item in Model)
    {
<div class="flex-container">
    <div class="advertisement-list">
        <div class="container">
            <div id="slider" class="slider">
                <figure>
                    <img src="data:image/png;base64, @Convert.ToBase64String(item.imageData)" alt="Image" width="800" height="600" />
                </figure>
                <button class="btn-prev"><i class="fa fa-arrow-circle-left"></i> </button>
                <button class="btn-next"><i class="fa fa-arrow-circle-right"></i> </button>
                <div class="c">
                    <ul>
                        <i class="fa-solid fa-square-share-nodes aaa "></i>
                        <i class="fa-solid fa-heart aaa"></i>
                    </ul>
                </div>
            </div>
        </div>

        <div class="abcd">
            <div class="ccc">
                @Html.DisplayFor(modelItem => item.advertiseTitle)
            </div>
            <div class="ccc">
                @Html.DisplayFor(modelItem => item.advertiseDescription)
            </div>
            <div class="ccc">
                RS.@Html.DisplayFor(modelItem => item.advertisePrice)
            </div>
        </div>
        <div class="buttondiv">
            <div>
                <a href="@Url.Action("select", "Chat", new { userId = item.userId })" style="text-decoration:none; color:black">
                    <button class="but">@Html.DisplayFor(modelItem => item.firstName)</button>
                </a>


                <a href="@Url.Action("BuyProduct", new { advertiseId = item.advertiseId })" style="text-decoration:none; color:black">
                    <button class="but"> Buy  </button>

                </a>

            </div>
        </div>







        <div class="ggg" data-area="@item.areaName">
            hhhhh
            <p>@item.areaName</p>
        </div>



        <div id="map" style="height: 400px; width: 100%;"></div>


    </div>
</div>}


    <script>
    var map = L.map('map').setView([0, 0], 10);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var cityElement = document.querySelector(".ggg");
        var userLocation = cityElement.getAttribute("data-area");

        var openCageApiKey = '41120dd85dfd4ec28bbc32e4b4894fba';

        fetch(`https://api.opencagedata.com/geocode/v1/json?q=${userLocation}&key=${openCageApiKey}`)
            .then(response => response.json())
            .then(data => {
                if (data.results && data.results.length > 0) {
                    var latitude = data.results[0].geometry.lat;
                    var longitude = data.results[0].geometry.lng;

                    L.marker([latitude, longitude]).addTo(map);
                    map.setView([latitude, longitude], 10);
                } else {
                    console.error('Geocoding failed for the given location');
                }
            })
            .catch(error => {
                console.error('Error during geocoding:', error);
            });</script>



</body>

@*<tr>
        <td>
            @Html.DisplayFor(modelItem => item.advertiseId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.userId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.firstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.stateName)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.cityName)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.areaName)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.advertiseTitle)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.advertiseDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.advertisePrice)
        </td>

        <td>
            <img src="data:image/png;base64, @Convert.ToBase64String(item.imageData)" alt="Image" style="height:200px; width:200px" />

        </td>
    </tr>
    }

    </table>*@